{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUCKY\\\\Downloads\\\\Medicine-Prediction-System - Copy\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    // Check if user is logged in on app start\n    if (token) {\n      validateToken();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const validateToken = async () => {\n    try {\n      const response = await api.get('/auth/validate-token', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        setUser(response.data.user);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error('Token validation failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          user: userData,\n          access_token\n        } = response.data;\n        setUser(userData);\n        setToken(access_token);\n        localStorage.setItem('token', access_token);\n        return {\n          success: true,\n          user: userData\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const demoLogin = async () => {\n    try {\n      const response = await api.post('/auth/demo-login', {\n        email: 'demo@medicine.com',\n        password: 'demo123'\n      });\n      if (response.data.success) {\n        const {\n          user: userData,\n          access_token\n        } = response.data;\n        setUser(userData);\n        setToken(access_token);\n        localStorage.setItem('token', access_token);\n        return {\n          success: true,\n          user: userData\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Demo login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      if (response.data.success) {\n        const {\n          user: newUser,\n          access_token\n        } = response.data;\n        setUser(newUser);\n        setToken(access_token);\n        localStorage.setItem('token', access_token);\n        return {\n          success: true,\n          user: newUser\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n  const getAuthHeader = () => {\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n  };\n  const value = {\n    user,\n    login,\n    demoLogin,\n    register,\n    logout,\n    loading,\n    token,\n    getAuthHeader\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","undefined","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","validateToken","response","get","headers","Authorization","data","success","logout","error","console","login","email","password","post","userData","access_token","setItem","message","_error$response","_error$response$data","demoLogin","_error$response2","_error$response2$data","register","newUser","_error$response3","_error$response3$data","removeItem","getAuthHeader","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LUCKY/Downloads/Medicine-Prediction-System - Copy/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { api } from '../utils/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    if (token) {\r\n      validateToken();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const validateToken = async () => {\r\n    try {\r\n      const response = await api.get('/auth/validate-token', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        setUser(response.data.user);\r\n      } else {\r\n        logout();\r\n      }\r\n    } catch (error) {\r\n      console.error('Token validation failed:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      \r\n      if (response.data.success) {\r\n        const { user: userData, access_token } = response.data;\r\n        setUser(userData);\r\n        setToken(access_token);\r\n        localStorage.setItem('token', access_token);\r\n        return { success: true, user: userData };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const demoLogin = async () => {\r\n    try {\r\n      const response = await api.post('/auth/demo-login', {\r\n        email: 'demo@medicine.com',\r\n        password: 'demo123'\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        const { user: userData, access_token } = response.data;\r\n        setUser(userData);\r\n        setToken(access_token);\r\n        localStorage.setItem('token', access_token);\r\n        return { success: true, user: userData };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Demo login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      \r\n      if (response.data.success) {\r\n        const { user: newUser, access_token } = response.data;\r\n        setUser(newUser);\r\n        setToken(access_token);\r\n        localStorage.setItem('token', access_token);\r\n        return { success: true, user: newUser };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Registration failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const getAuthHeader = () => {\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    demoLogin,\r\n    register,\r\n    logout,\r\n    loading,\r\n    token,\r\n    getAuthHeader,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}