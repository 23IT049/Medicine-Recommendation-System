{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUCKY\\\\Downloads\\\\Medicine-Prediction-System - Copy\\\\frontend\\\\src\\\\pages\\\\History.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { Clock, Calendar, Activity, TrendingUp, AlertCircle } from 'lucide-react';\nimport { api } from '../utils/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst History = () => {\n  _s();\n  const {\n    user,\n    getAuthHeader\n  } = useAuth();\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState({\n    totalPredictions: 0,\n    lastWeek: 0,\n    commonSymptoms: [],\n    commonDiseases: []\n  });\n  useEffect(() => {\n    fetchPredictionHistory();\n  }, []);\n  const fetchPredictionHistory = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/patient/history', {\n        headers: getAuthHeader()\n      });\n      if (response.data.success) {\n        setPredictions(response.data.predictions || []);\n        calculateStats(response.data.predictions || []);\n      } else {\n        toast.error('Failed to load prediction history');\n      }\n    } catch (error) {\n      console.error('Error fetching history:', error);\n      // For now, show demo data if API fails\n      const demoData = [{\n        _id: '1',\n        symptoms_detected: ['headache', 'fever', 'fatigue'],\n        predicted_disease: 'Common Cold',\n        confidence: 0.95,\n        timestamp: new Date().toISOString(),\n        description: 'The common cold is a viral infectious disease that affects the upper respiratory tract.',\n        precautions: ['Rest', 'Drink fluids', 'Avoid close contact with others']\n      }, {\n        _id: '2',\n        symptoms_detected: ['cough', 'chest_pain', 'breathlessness'],\n        predicted_disease: 'Bronchial Asthma',\n        confidence: 0.88,\n        timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n        description: 'Bronchial asthma is a respiratory condition where airways become inflamed and narrow.',\n        precautions: ['Avoid triggers', 'Use prescribed inhaler', 'Monitor breathing']\n      }];\n      setPredictions(demoData);\n      calculateStats(demoData);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const calculateStats = predictions => {\n    const now = new Date();\n    const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n    const lastWeek = predictions.filter(p => new Date(p.timestamp) > weekAgo).length;\n\n    // Get most common symptoms\n    const symptomCounts = {};\n    predictions.forEach(p => {\n      (p.symptoms_detected || []).forEach(symptom => {\n        symptomCounts[symptom] = (symptomCounts[symptom] || 0) + 1;\n      });\n    });\n    const commonSymptoms = Object.entries(symptomCounts).sort(([, a], [, b]) => b - a).slice(0, 5).map(([symptom, count]) => ({\n      name: symptom,\n      count\n    }));\n\n    // Get most common diseases\n    const diseaseCounts = {};\n    predictions.forEach(p => {\n      if (p.predicted_disease) {\n        diseaseCounts[p.predicted_disease] = (diseaseCounts[p.predicted_disease] || 0) + 1;\n      }\n    });\n    const commonDiseases = Object.entries(diseaseCounts).sort(([, a], [, b]) => b - a).slice(0, 5).map(([disease, count]) => ({\n      name: disease,\n      count\n    }));\n    setStats({\n      totalPredictions: predictions.length,\n      lastWeek,\n      commonSymptoms,\n      commonDiseases\n    });\n  };\n  const formatDate = timestamp => {\n    return new Date(timestamp).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getConfidenceColor = confidence => {\n    if (confidence >= 0.9) return 'text-green-600 bg-green-100';\n    if (confidence >= 0.7) return 'text-yellow-600 bg-yellow-100';\n    return 'text-red-600 bg-red-100';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-gray-600\",\n        children: \"Loading history...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-3\",\n      children: [/*#__PURE__*/_jsxDEV(Clock, {\n        className: \"w-8 h-8 text-primary-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900\",\n        children: \"Prediction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-12 bg-primary-100 rounded-lg flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(Activity, {\n              className: \"w-6 h-6 text-primary-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: stats.totalPredictions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 text-sm\",\n              children: \"Total Predictions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(Calendar, {\n              className: \"w-6 h-6 text-green-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: stats.lastWeek\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 text-sm\",\n              children: \"This Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(TrendingUp, {\n              className: \"w-6 h-6 text-purple-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: [predictions.length > 0 ? Math.round(predictions.reduce((sum, p) => sum + (p.confidence || 0), 0) / predictions.length * 100) : 0, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 text-sm\",\n              children: \"Avg Confidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid lg:grid-cols-3 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900 mb-6\",\n            children: \"Recent Predictions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), predictions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-8\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"w-12 h-12 text-gray-400 mx-auto mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"No predictions found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 text-sm\",\n              children: \"Start by making your first health prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: predictions.map(prediction => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-start mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-semibold text-gray-900 text-lg\",\n                    children: prediction.predicted_disease\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600 text-sm\",\n                    children: formatDate(prediction.timestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 rounded-full text-xs font-medium ${getConfidenceColor(prediction.confidence || 0)}`,\n                  children: [Math.round((prediction.confidence || 0) * 100), \"% confidence\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this), prediction.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 text-sm mb-3\",\n                children: prediction.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm font-medium text-gray-700\",\n                    children: \"Symptoms: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex flex-wrap gap-1 mt-1\",\n                    children: (prediction.symptoms_detected || []).map((symptom, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"symptom-chip text-xs\",\n                      children: symptom.replace(/_/g, ' ')\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this), prediction.precautions && prediction.precautions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm font-medium text-gray-700\",\n                    children: \"Precautions: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"text-sm text-gray-600 mt-1 ml-4\",\n                    children: prediction.precautions.slice(0, 3).map((precaution, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"list-disc\",\n                      children: precaution\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, prediction._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900 mb-4\",\n            children: \"Most Common Symptoms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), stats.commonSymptoms.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-sm\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: stats.commonSymptoms.map((symptom, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-700 text-sm capitalize\",\n                children: symptom.name.replace(/_/g, ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-primary-100 text-primary-800 text-xs px-2 py-1 rounded-full\",\n                children: symptom.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900 mb-4\",\n            children: \"Common Predictions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), stats.commonDiseases.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-sm\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: stats.commonDiseases.map((disease, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-700 text-sm\",\n                children: disease.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-secondary-100 text-secondary-800 text-xs px-2 py-1 rounded-full\",\n                children: disease.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(History, \"pX9Sl+mIT8eQP0nb/i8f+JyOHkg=\", false, function () {\n  return [useAuth];\n});\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","Clock","Calendar","Activity","TrendingUp","AlertCircle","api","toast","jsxDEV","_jsxDEV","History","_s","user","getAuthHeader","predictions","setPredictions","loading","setLoading","stats","setStats","totalPredictions","lastWeek","commonSymptoms","commonDiseases","fetchPredictionHistory","response","get","headers","data","success","calculateStats","error","console","demoData","_id","symptoms_detected","predicted_disease","confidence","timestamp","Date","toISOString","description","precautions","now","weekAgo","getTime","filter","p","length","symptomCounts","forEach","symptom","Object","entries","sort","a","b","slice","map","count","name","diseaseCounts","disease","formatDate","toLocaleDateString","year","month","day","hour","minute","getConfidenceColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","reduce","sum","prediction","index","replace","precaution","_c","$RefreshReg$"],"sources":["C:/Users/LUCKY/Downloads/Medicine-Prediction-System - Copy/frontend/src/pages/History.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { Clock, Calendar, Activity, TrendingUp, AlertCircle } from 'lucide-react';\r\nimport { api } from '../utils/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst History = () => {\r\n  const { user, getAuthHeader } = useAuth();\r\n  const [predictions, setPredictions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    totalPredictions: 0,\r\n    lastWeek: 0,\r\n    commonSymptoms: [],\r\n    commonDiseases: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPredictionHistory();\r\n  }, []);\r\n\r\n  const fetchPredictionHistory = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get('/patient/history', {\r\n        headers: getAuthHeader()\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setPredictions(response.data.predictions || []);\r\n        calculateStats(response.data.predictions || []);\r\n      } else {\r\n        toast.error('Failed to load prediction history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching history:', error);\r\n      // For now, show demo data if API fails\r\n      const demoData = [\r\n        {\r\n          _id: '1',\r\n          symptoms_detected: ['headache', 'fever', 'fatigue'],\r\n          predicted_disease: 'Common Cold',\r\n          confidence: 0.95,\r\n          timestamp: new Date().toISOString(),\r\n          description: 'The common cold is a viral infectious disease that affects the upper respiratory tract.',\r\n          precautions: ['Rest', 'Drink fluids', 'Avoid close contact with others']\r\n        },\r\n        {\r\n          _id: '2', \r\n          symptoms_detected: ['cough', 'chest_pain', 'breathlessness'],\r\n          predicted_disease: 'Bronchial Asthma',\r\n          confidence: 0.88,\r\n          timestamp: new Date(Date.now() - 24*60*60*1000).toISOString(),\r\n          description: 'Bronchial asthma is a respiratory condition where airways become inflamed and narrow.',\r\n          precautions: ['Avoid triggers', 'Use prescribed inhaler', 'Monitor breathing']\r\n        }\r\n      ];\r\n      setPredictions(demoData);\r\n      calculateStats(demoData);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateStats = (predictions) => {\r\n    const now = new Date();\r\n    const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n    \r\n    const lastWeek = predictions.filter(p => \r\n      new Date(p.timestamp) > weekAgo\r\n    ).length;\r\n\r\n    // Get most common symptoms\r\n    const symptomCounts = {};\r\n    predictions.forEach(p => {\r\n      (p.symptoms_detected || []).forEach(symptom => {\r\n        symptomCounts[symptom] = (symptomCounts[symptom] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    const commonSymptoms = Object.entries(symptomCounts)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, 5)\r\n      .map(([symptom, count]) => ({ name: symptom, count }));\r\n\r\n    // Get most common diseases\r\n    const diseaseCounts = {};\r\n    predictions.forEach(p => {\r\n      if (p.predicted_disease) {\r\n        diseaseCounts[p.predicted_disease] = (diseaseCounts[p.predicted_disease] || 0) + 1;\r\n      }\r\n    });\r\n\r\n    const commonDiseases = Object.entries(diseaseCounts)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, 5)\r\n      .map(([disease, count]) => ({ name: disease, count }));\r\n\r\n    setStats({\r\n      totalPredictions: predictions.length,\r\n      lastWeek,\r\n      commonSymptoms,\r\n      commonDiseases\r\n    });\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    return new Date(timestamp).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getConfidenceColor = (confidence) => {\r\n    if (confidence >= 0.9) return 'text-green-600 bg-green-100';\r\n    if (confidence >= 0.7) return 'text-yellow-600 bg-yellow-100';\r\n    return 'text-red-600 bg-red-100';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <span className=\"ml-2 text-gray-600\">Loading history...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center space-x-3\">\r\n        <Clock className=\"w-8 h-8 text-primary-600\" />\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">Prediction History</h1>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        <div className=\"card\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"w-12 h-12 bg-primary-100 rounded-lg flex items-center justify-center\">\r\n              <Activity className=\"w-6 h-6 text-primary-600\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{stats.totalPredictions}</p>\r\n              <p className=\"text-gray-600 text-sm\">Total Predictions</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\r\n              <Calendar className=\"w-6 h-6 text-green-600\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{stats.lastWeek}</p>\r\n              <p className=\"text-gray-600 text-sm\">This Week</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n              <TrendingUp className=\"w-6 h-6 text-purple-600\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"text-2xl font-bold text-gray-900\">\r\n                {predictions.length > 0 \r\n                  ? Math.round((predictions.reduce((sum, p) => sum + (p.confidence || 0), 0) / predictions.length) * 100)\r\n                  : 0}%\r\n              </p>\r\n              <p className=\"text-gray-600 text-sm\">Avg Confidence</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid lg:grid-cols-3 gap-8\">\r\n        {/* Prediction History */}\r\n        <div className=\"lg:col-span-2\">\r\n          <div className=\"card\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Recent Predictions</h3>\r\n            \r\n            {predictions.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <AlertCircle className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                <p className=\"text-gray-600\">No predictions found</p>\r\n                <p className=\"text-gray-500 text-sm\">Start by making your first health prediction</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                {predictions.map((prediction) => (\r\n                  <div key={prediction._id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                    <div className=\"flex justify-between items-start mb-3\">\r\n                      <div>\r\n                        <h4 className=\"font-semibold text-gray-900 text-lg\">{prediction.predicted_disease}</h4>\r\n                        <p className=\"text-gray-600 text-sm\">{formatDate(prediction.timestamp)}</p>\r\n                      </div>\r\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getConfidenceColor(prediction.confidence || 0)}`}>\r\n                        {Math.round((prediction.confidence || 0) * 100)}% confidence\r\n                      </span>\r\n                    </div>\r\n\r\n                    {prediction.description && (\r\n                      <p className=\"text-gray-700 text-sm mb-3\">{prediction.description}</p>\r\n                    )}\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <div>\r\n                        <span className=\"text-sm font-medium text-gray-700\">Symptoms: </span>\r\n                        <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                          {(prediction.symptoms_detected || []).map((symptom, index) => (\r\n                            <span key={index} className=\"symptom-chip text-xs\">\r\n                              {symptom.replace(/_/g, ' ')}\r\n                            </span>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {prediction.precautions && prediction.precautions.length > 0 && (\r\n                        <div>\r\n                          <span className=\"text-sm font-medium text-gray-700\">Precautions: </span>\r\n                          <ul className=\"text-sm text-gray-600 mt-1 ml-4\">\r\n                            {prediction.precautions.slice(0, 3).map((precaution, index) => (\r\n                              <li key={index} className=\"list-disc\">{precaution}</li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Statistics Sidebar */}\r\n        <div className=\"space-y-6\">\r\n          {/* Common Symptoms */}\r\n          <div className=\"card\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Most Common Symptoms</h3>\r\n            {stats.commonSymptoms.length === 0 ? (\r\n              <p className=\"text-gray-500 text-sm\">No data available</p>\r\n            ) : (\r\n              <div className=\"space-y-3\">\r\n                {stats.commonSymptoms.map((symptom, index) => (\r\n                  <div key={index} className=\"flex justify-between items-center\">\r\n                    <span className=\"text-gray-700 text-sm capitalize\">\r\n                      {symptom.name.replace(/_/g, ' ')}\r\n                    </span>\r\n                    <span className=\"bg-primary-100 text-primary-800 text-xs px-2 py-1 rounded-full\">\r\n                      {symptom.count}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Common Diseases */}\r\n          <div className=\"card\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Common Predictions</h3>\r\n            {stats.commonDiseases.length === 0 ? (\r\n              <p className=\"text-gray-500 text-sm\">No data available</p>\r\n            ) : (\r\n              <div className=\"space-y-3\">\r\n                {stats.commonDiseases.map((disease, index) => (\r\n                  <div key={index} className=\"flex justify-between items-center\">\r\n                    <span className=\"text-gray-700 text-sm\">{disease.name}</span>\r\n                    <span className=\"bg-secondary-100 text-secondary-800 text-xs px-2 py-1 rounded-full\">\r\n                      {disease.count}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}