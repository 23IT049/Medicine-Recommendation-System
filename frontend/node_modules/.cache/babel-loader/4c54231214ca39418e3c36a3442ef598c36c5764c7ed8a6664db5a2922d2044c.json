{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{api}from'../utils/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem('token'));useEffect(()=>{// Check if user is logged in on app start\nif(token){validateToken();}else{setLoading(false);}},[]);const validateToken=async()=>{try{const response=await api.get('/auth/validate-token',{headers:{Authorization:\"Bearer \".concat(token)}});if(response.data.success){setUser(response.data.user);}else{logout();}}catch(error){console.error('Token validation failed:',error);logout();}finally{setLoading(false);}};const login=async(email,password)=>{try{const response=await api.post('/auth/login',{email,password});if(response.data.success){const{user:userData,access_token}=response.data;setUser(userData);setToken(access_token);localStorage.setItem('token',access_token);return{success:true,user:userData};}else{return{success:false,message:response.data.message};}}catch(error){var _error$response,_error$response$data;return{success:false,message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed'};}};const demoLogin=async()=>{try{const response=await api.post('/auth/demo-login',{email:'demo@medicine.com',password:'demo123'});if(response.data.success){const{user:userData,access_token}=response.data;setUser(userData);setToken(access_token);localStorage.setItem('token',access_token);return{success:true,user:userData};}else{return{success:false,message:response.data.message};}}catch(error){var _error$response2,_error$response2$data;return{success:false,message:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Demo login failed'};}};const register=async userData=>{try{const response=await api.post('/auth/register',userData);if(response.data.success){const{user:newUser,access_token}=response.data;setUser(newUser);setToken(access_token);localStorage.setItem('token',access_token);return{success:true,user:newUser};}else{return{success:false,message:response.data.message};}}catch(error){var _error$response3,_error$response3$data;return{success:false,message:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Registration failed'};}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('token');};const getAuthHeader=()=>{return token?{Authorization:\"Bearer \".concat(token)}:{};};const value={user,login,demoLogin,register,logout,loading,token,getAuthHeader};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsx","_jsx","AuthContext","useAuth","context","undefined","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","validateToken","response","get","headers","Authorization","concat","data","success","logout","error","console","login","email","password","post","userData","access_token","setItem","message","_error$response","_error$response$data","demoLogin","_error$response2","_error$response2$data","register","newUser","_error$response3","_error$response3$data","removeItem","getAuthHeader","value","Provider"],"sources":["C:/Users/LUCKY/Downloads/Medicine-Prediction-System - Copy/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { api } from '../utils/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    if (token) {\r\n      validateToken();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const validateToken = async () => {\r\n    try {\r\n      const response = await api.get('/auth/validate-token', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        setUser(response.data.user);\r\n      } else {\r\n        logout();\r\n      }\r\n    } catch (error) {\r\n      console.error('Token validation failed:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      \r\n      if (response.data.success) {\r\n        const { user: userData, access_token } = response.data;\r\n        setUser(userData);\r\n        setToken(access_token);\r\n        localStorage.setItem('token', access_token);\r\n        return { success: true, user: userData };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const demoLogin = async () => {\r\n    try {\r\n      const response = await api.post('/auth/demo-login', {\r\n        email: 'demo@medicine.com',\r\n        password: 'demo123'\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        const { user: userData, access_token } = response.data;\r\n        setUser(userData);\r\n        setToken(access_token);\r\n        localStorage.setItem('token', access_token);\r\n        return { success: true, user: userData };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Demo login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      \r\n      if (response.data.success) {\r\n        const { user: newUser, access_token } = response.data;\r\n        setUser(newUser);\r\n        setToken(access_token);\r\n        localStorage.setItem('token', access_token);\r\n        return { success: true, user: newUser };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Registration failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const getAuthHeader = () => {\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    demoLogin,\r\n    register,\r\n    logout,\r\n    loading,\r\n    token,\r\n    getAuthHeader,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}